{"version":3,"sources":["index.js"],"names":["Square","props","winSquares","className","indexOf","index","onClick","value","Board","i","this","squares","square","j","renderSquare","slice","React","Component","Game","state","history","Array","fill","step","stepNumber","xIsNext","sortDec","highLightLast","always","highLight","length","calculateWinner","setState","concat","position","status","current","winner","noWinner","moves","map","move","col","row","Math","floor","desc","jumpTo","handleClick","color","size","reverse","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f7467a5.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nconst Square = (props) => {\r\n\tlet winSquares = [];\r\n\tif(props.winSquares) {\r\n\t\twinSquares = props.winSquares;\r\n\t}\r\n    return (\r\n      <button \r\n\t\t  className={winSquares.indexOf(props.index) !== -1 ? \"square winSquares\" : \"square\"} \r\n\t\t  onClick = {props.onClick}\r\n\t  >\r\n        {props.value}\r\n      </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i, winSquares) {\r\n\t  \r\n    return (\r\n\t  <Square key={i}\r\n\t\tvalue={this.props.squares[i]} \r\n\t\twinSquares={winSquares}\r\n\t\tindex={i}\r\n\t\tonClick={() => this.props.onClick(i)} \r\n\t  />\r\n\t);\r\n  }\r\n\r\n  render() {\r\n\tlet square = [];\r\n\tlet squares = [];\r\n\tfor (let j = 0; j < 3; j++) {\r\n\t\tfor (let i = 0; i < 3; i++) {\r\n\t\t\tsquare[i] = this.renderSquare(j*3+i, this.props.winSquares);\r\n\t\t}\r\n\t\tsquares[j] = <div key={j}>{square.slice()}</div>\r\n\t}\r\n    return (\r\n      <div>\r\n\t\t{squares}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor (props) {\r\n\t  super(props);\r\n\t  this.state = {\r\n\t\t  history: [{\r\n\t\t\tsquares: Array(9).fill(null),\r\n\t\t\tstep: null\r\n\t\t  }],\r\n\t\t  stepNumber: 0,\r\n\t\t  xIsNext: true,\r\n\t\t  sortDec: false,\r\n\t\t  highLightLast: {\r\n\t\t\talways: false,\r\n\t\t\thighLight: false\t\t\t\r\n\t\t  }\r\n\t  };\r\n  }\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber+1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares)[0] || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n\t\tposition: i\r\n      }]),\r\n\t  stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext\r\n    });\r\n\tthis.setState({\r\n\t\thighLightLast: {\r\n\t\t\talways: this.state.highLightLast.always,\r\n\t\t\thighLight: false\t\t\t\r\n\t\t}\r\n\t});\r\n  }\r\n  jumpTo(step){\r\n\tthis.setState({\r\n\t\t  stepNumber: step,\r\n\t\t  xIsNext: (step%2) === 0\r\n    });\r\n\tthis.setState({\r\n\t\thighLightLast: {\r\n\t\t\talways: this.state.highLightLast.always,\r\n\t\t\thighLight: true\t\t\t\r\n\t\t}\r\n\t});\r\n  }\r\n  render() {\r\n\tconst history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    const noWinner = calculateNoWinner(current.squares);\r\n\tconst moves = history.map((step, move) => {\r\n      const col = step.position%3+1;\t\t\r\n      const row = Math.floor(step.position/3+1);\t\t\r\n      const desc = move ?\r\n        `Перейти к ходу #${move} (${col}, ${row})` :\r\n        'К началу игры';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)} className={(this.state.highLightLast.always || this.state.highLightLast.highLight) && (move === this.state.stepNumber) ? 'btn active' : 'btn'}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n    let status;\r\n    if (winner[0]) {\r\n      status = 'Выиграл ' + winner[0];\r\n    } else if(noWinner) {\r\n\t  status = 'Ничья';\r\n\t} else {\r\n      status = 'Следующий ход: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board \r\n\t\t\t\tsquares={current.squares}\r\n\t\t\t\twinSquares={winner[1]}\r\n\t\t\t\tonClick = {(i) => this.handleClick(i)}\r\n\t\t  />\r\n        </div>\r\n        <div className=\"game-info\">\r\n\t\t  <button onClick={() => this.setState({highLightLast: {always: !this.state.highLightLast.always}})} className='containerLight'>\r\n\t\t\t<div className='titleLight'>Включить подсветку последнего хода</div>\r\n\t\t\t<div className={this.state.highLightLast.always ? 'toggleLight on' : 'toggleLight'}>\r\n\t\t\t\t<div className={this.state.highLightLast.always ? 'toggleLightCircle on' : 'toggleLightCircle'}>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t  </button>\r\n          <div>{status }</div>\r\n\t\t  <button onClick={() => this.setState({sortDec: !this.state.sortDec})} className='containerSort'>\r\n\t\t\t<div className='titleSort'>Сортировка</div>\r\n\t\t\t<div className={this.state.sortDec ? 'arrowSortLeft sort' : 'arrowSortLeft'}>\r\n\t\t\t\t<hr color='black' size='1'/>\r\n\t\t\t</div>\r\n\t\t\t<div className={this.state.sortDec ? 'arrowSortRight sort' : 'arrowSortRight'}>\r\n\t\t\t\t<hr color='black' size='1'/>\r\n\t\t\t</div>\r\n\t\t  </button>\r\n\t\t  \r\n          <ol>{this.state.sortDec ? moves.slice().reverse() : moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nlet render = () => {\r\n\tReactDOM.render(\r\n\t  <Game />,\r\n\t  document.getElementById('root')\r\n\t);\r\n}\r\nrender();\r\n\r\nfunction calculateWinner (squares) {\r\n\tconst lines = [\r\n\t\t[0, 1, 2],\r\n\t\t[3, 4, 5],\r\n\t\t[6, 7, 8],\r\n\t\t[0, 3, 6], \r\n\t\t[1, 4, 7], \r\n\t\t[2, 5, 8], \r\n\t\t[0, 4, 8], \r\n\t\t[2, 4, 6] \r\n\t];\r\n\tfor (let i = 0; i < lines.length; i++) {\r\n\t\tconst [a, b, c] = lines[i];\r\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n\t\t\treturn [squares[a], lines[i]];\r\n\t\t}\r\n\t}\r\n\treturn [null];\r\n};\r\n\r\nfunction calculateNoWinner (squares) {\r\n\treturn squares.indexOf(null) === -1;\r\n};\r\n"],"sourceRoot":""}